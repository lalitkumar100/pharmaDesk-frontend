{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\OneDrive\\\\Desktop\\\\frontend\\\\src\\\\components\\\\BoxLoader.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n\n// Function to generate a random color from a predefined list\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getRandomColor = () => {\n  const colors = [\"#E0E0E0\", \"#333333\", \"#F5F5DC\", \"#000080\", \"#228B22\", \"#FDF5E6\", \"#800020\", \"#FFFFF0\", \"#36220B\", \"#98FF98\", \"#008080\", \"#FFFACD\", \"#4169E1\", \"#E0FFFF\", \"#9400D3\", \"#FA8072\", \"#2F4F4F\", \"#FF7F50\", \"#191970\", \"#F4A460\", \"#556B2F\", \"#F5DEB3\", \"#8B4513\", \"#E6A8A4\", \"#5C4033\", \"#B2AC88\", \"#006064\", \"#F0E68C\", \"#FFF0F5\", \"#8E4585\", \"#FADADD\", \"#8B008B\", \"#87CEEB\", \"#4B0082\", \"#FFDAB9\", \"#E2725B\", \"#B0E0E6\", \"#264653\", \"#FFFAFA\", \"#000000\", \"#F8F8FF\", \"#B0C4DE\", \"#003153\", \"#F08080\", \"#5C4033\", \"#FFF8DC\", \"#006400\", \"#E5E4E2\", \"#2B3539\", \"#F2F0E6\", \"#36454F\", \"#FFF5EE\", \"#46535E\", \"#DCDCDC\", \"#35393C\", \"#FAF0E6\", \"#2F4F4F\", \"#E6E6FA\", \"#9966CC\", \"#EEE8AA\", \"#0F52BA\", \"#7FFFD4\", \"#50C878\", \"#90EE90\", \"#00A36C\", \"#DAA520\", \"#E0115F\", \"#FFDAB9\", \"#CC5500\", \"#FFEFD5\", \"#E34234\", \"#FFFDD0\", \"#954535\", \"#F0DC82\", \"#B7410E\", \"#FFE4C4\", \"#E9967A\", \"#F0F8FF\", \"#AFEEEE\", \"#E6E6FA\", \"#6A5ACD\", \"#F0FFF0\", \"#F5FFFA\", \"#355E3B\", \"#FFE4E1\", \"#800020\", \"#FFA07A\", \"#8B0000\", \"#FFDEAD\", \"#6F4E37\", \"#778899\", \"#FDF5E6\"];\n  return colors[Math.floor(Math.random() * colors.length)];\n};\n\n// BoxLoader component displays a rotating box icon with changing colors and loading text\nconst BoxLoader = () => {\n  _s();\n  // State to hold the current color for both the icon and the outer div background\n  const [currentColor, setCurrentColor] = useState(getRandomColor());\n  // State to manage the animated dots for \"Loading...\" text\n  const [dots, setDots] = useState('.');\n  useEffect(() => {\n    // Set up an interval to change the color every 1 second\n    const colorInterval = setInterval(() => {\n      setCurrentColor(getRandomColor());\n    }, 1000); // Change color every 1000 milliseconds (1 second)\n\n    // Set up an interval to animate the \"Loading...\" dots every 0.5 seconds\n    const dotsInterval = setInterval(() => {\n      setDots(prevDots => {\n        // Cycle through '.', '..', '...'\n        if (prevDots === '...') {\n          return '.';\n        }\n        return prevDots + '.';\n      });\n    }, 500); // Update dots every 500 milliseconds (0.5 seconds)\n\n    // Cleanup function: Clear intervals when the component unmounts\n    return () => {\n      clearInterval(colorInterval);\n      clearInterval(dotsInterval);\n    };\n  }, []); // Empty dependency array ensures this effect runs only once on mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center p-8 text-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-24 h-24 mx-auto mb-6 rounded-full flex items-center justify-center transition-colors duration-20\",\n      style: {\n        backgroundColor: currentColor\n      } // Dynamic background color\n      ,\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"w-12 h-12 text-white\" // text-white ensures the icon remains visible on changing backgrounds\n        ,\n        fill: \"currentColor\",\n        viewBox: \"0 0 20 20\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          fillRule: \"evenodd\",\n          d: \"M3 4a1 1 0 011-1h12a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1V4zM3 10a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H4a1 1 0 01-1-1v-6zM14 9a1 1 0 00-1 1v6a1 1 0 001 1h2a1 1 0 001-1v-6a1 1 0 00-1-1h-2z\",\n          clipRule: \"evenodd\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-xl font-semibold text-gray-600\",\n      children: [\"Loading\", dots]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n};\n_s(BoxLoader, \"odkBKGDntLL+IqV4KjGLjCRbJCk=\");\n_c = BoxLoader;\nexport default BoxLoader;\nvar _c;\n$RefreshReg$(_c, \"BoxLoader\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","getRandomColor","colors","Math","floor","random","length","BoxLoader","_s","currentColor","setCurrentColor","dots","setDots","colorInterval","setInterval","dotsInterval","prevDots","clearInterval","className","children","style","backgroundColor","fill","viewBox","fillRule","d","clipRule","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/hp/OneDrive/Desktop/frontend/src/components/BoxLoader.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\n// Function to generate a random color from a predefined list\r\nconst getRandomColor = () => {\r\n  const colors = [\r\n  \"#E0E0E0\",\r\n  \"#333333\",\r\n  \"#F5F5DC\",\r\n  \"#000080\",\r\n  \"#228B22\",\r\n  \"#FDF5E6\",\r\n  \"#800020\",\r\n  \"#FFFFF0\",\r\n  \"#36220B\",\r\n  \"#98FF98\",\r\n  \"#008080\",\r\n  \"#FFFACD\",\r\n  \"#4169E1\",\r\n  \"#E0FFFF\",\r\n  \"#9400D3\",\r\n  \"#FA8072\",\r\n  \"#2F4F4F\",\r\n  \"#FF7F50\",\r\n  \"#191970\",\r\n  \"#F4A460\",\r\n  \"#556B2F\",\r\n  \"#F5DEB3\",\r\n  \"#8B4513\",\r\n  \"#E6A8A4\",\r\n  \"#5C4033\",\r\n  \"#B2AC88\",\r\n  \"#006064\",\r\n  \"#F0E68C\",\r\n  \"#FFF0F5\",\r\n  \"#8E4585\",\r\n  \"#FADADD\",\r\n  \"#8B008B\",\r\n  \"#87CEEB\",\r\n  \"#4B0082\",\r\n  \"#FFDAB9\",\r\n  \"#E2725B\",\r\n  \"#B0E0E6\",\r\n  \"#264653\",\r\n  \"#FFFAFA\",\r\n  \"#000000\",\r\n  \"#F8F8FF\",\r\n  \"#B0C4DE\",\r\n  \"#003153\",\r\n  \"#F08080\",\r\n  \"#5C4033\",\r\n  \"#FFF8DC\",\r\n  \"#006400\",\r\n  \"#E5E4E2\",\r\n  \"#2B3539\",\r\n  \"#F2F0E6\",\r\n  \"#36454F\",\r\n  \"#FFF5EE\",\r\n  \"#46535E\",\r\n  \"#DCDCDC\",\r\n  \"#35393C\",\r\n  \"#FAF0E6\",\r\n  \"#2F4F4F\",\r\n  \"#E6E6FA\",\r\n  \"#9966CC\",\r\n  \"#EEE8AA\",\r\n  \"#0F52BA\",\r\n  \"#7FFFD4\",\r\n  \"#50C878\",\r\n  \"#90EE90\",\r\n  \"#00A36C\",\r\n  \"#DAA520\",\r\n  \"#E0115F\",\r\n  \"#FFDAB9\",\r\n  \"#CC5500\",\r\n  \"#FFEFD5\",\r\n  \"#E34234\",\r\n  \"#FFFDD0\",\r\n  \"#954535\",\r\n  \"#F0DC82\",\r\n  \"#B7410E\",\r\n  \"#FFE4C4\",\r\n  \"#E9967A\",\r\n  \"#F0F8FF\",\r\n  \"#AFEEEE\",\r\n  \"#E6E6FA\",\r\n  \"#6A5ACD\",\r\n  \"#F0FFF0\",\r\n  \"#F5FFFA\",\r\n  \"#355E3B\",\r\n  \"#FFE4E1\",\r\n  \"#800020\",\r\n  \"#FFA07A\",\r\n  \"#8B0000\",\r\n  \"#FFDEAD\",\r\n  \"#6F4E37\",\r\n  \"#778899\",\r\n  \"#FDF5E6\"\r\n];\r\n  return colors[Math.floor(Math.random() * colors.length)];\r\n};\r\n\r\n// BoxLoader component displays a rotating box icon with changing colors and loading text\r\nconst BoxLoader = () => {\r\n  // State to hold the current color for both the icon and the outer div background\r\n  const [currentColor, setCurrentColor] = useState(getRandomColor());\r\n  // State to manage the animated dots for \"Loading...\" text\r\n  const [dots, setDots] = useState('.');\r\n\r\n  useEffect(() => {\r\n    // Set up an interval to change the color every 1 second\r\n    const colorInterval = setInterval(() => {\r\n      setCurrentColor(getRandomColor());\r\n    }, 1000); // Change color every 1000 milliseconds (1 second)\r\n\r\n    // Set up an interval to animate the \"Loading...\" dots every 0.5 seconds\r\n    const dotsInterval = setInterval(() => {\r\n      setDots(prevDots => {\r\n        // Cycle through '.', '..', '...'\r\n        if (prevDots === '...') {\r\n          return '.';\r\n        }\r\n        return prevDots + '.';\r\n      });\r\n    }, 500); // Update dots every 500 milliseconds (0.5 seconds)\r\n\r\n    // Cleanup function: Clear intervals when the component unmounts\r\n    return () => {\r\n      clearInterval(colorInterval);\r\n      clearInterval(dotsInterval);\r\n    };\r\n  }, []); // Empty dependency array ensures this effect runs only once on mount\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center p-8 text-white\">\r\n      {/* Container div for the loader icon - now its background color changes */}\r\n      {/* Added 'transition-colors duration-500' for a smooth color transition */}\r\n      <div \r\n        className=\"w-24 h-24 mx-auto mb-6 rounded-full flex items-center justify-center transition-colors duration-20\"\r\n        style={{ backgroundColor: currentColor }} // Dynamic background color\r\n      >\r\n        {/* SVG icon - rotation removed, its color is inherited from fill=\"currentColor\" */}\r\n        <svg \r\n          className=\"w-12 h-12 text-white\" // text-white ensures the icon remains visible on changing backgrounds\r\n          fill=\"currentColor\" \r\n          viewBox=\"0 0 20 20\"\r\n        >\r\n          <path fillRule=\"evenodd\" d=\"M3 4a1 1 0 011-1h12a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1V4zM3 10a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H4a1 1 0 01-1-1v-6zM14 9a1 1 0 00-1 1v6a1 1 0 001 1h2a1 1 0 001-1v-6a1 1 0 00-1-1h-2z\" clipRule=\"evenodd\" />\r\n        </svg>\r\n      </div>\r\n      \r\n      {/* \"Loading...\" text with animated dots */}\r\n      <p className=\"text-xl font-semibold text-gray-600\">\r\n        Loading{dots}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BoxLoader;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAElD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAC3B,MAAMC,MAAM,GAAG,CACftB;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAACI,cAAc,CAAC,CAAC,CAAC;EAClE;EACA,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,GAAG,CAAC;EAErCC,SAAS,CAAC,MAAM;IACd;IACA,MAAMe,aAAa,GAAGC,WAAW,CAAC,MAAM;MACtCJ,eAAe,CAACT,cAAc,CAAC,CAAC,CAAC;IACnC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;;IAEV;IACA,MAAMc,YAAY,GAAGD,WAAW,CAAC,MAAM;MACrCF,OAAO,CAACI,QAAQ,IAAI;QAClB;QACA,IAAIA,QAAQ,KAAK,KAAK,EAAE;UACtB,OAAO,GAAG;QACZ;QACA,OAAOA,QAAQ,GAAG,GAAG;MACvB,CAAC,CAAC;IACJ,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;;IAET;IACA,OAAO,MAAM;MACXC,aAAa,CAACJ,aAAa,CAAC;MAC5BI,aAAa,CAACF,YAAY,CAAC;IAC7B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEf,OAAA;IAAKkB,SAAS,EAAC,0DAA0D;IAAAC,QAAA,gBAGvEnB,OAAA;MACEkB,SAAS,EAAC,oGAAoG;MAC9GE,KAAK,EAAE;QAAEC,eAAe,EAAEZ;MAAa,CAAE,CAAC;MAAA;MAAAU,QAAA,eAG1CnB,OAAA;QACEkB,SAAS,EAAC,sBAAsB,CAAC;QAAA;QACjCI,IAAI,EAAC,cAAc;QACnBC,OAAO,EAAC,WAAW;QAAAJ,QAAA,eAEnBnB,OAAA;UAAMwB,QAAQ,EAAC,SAAS;UAACC,CAAC,EAAC,qMAAqM;UAACC,QAAQ,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGN9B,OAAA;MAAGkB,SAAS,EAAC,qCAAqC;MAAAC,QAAA,GAAC,SAC1C,EAACR,IAAI;IAAA;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV,CAAC;AAACtB,EAAA,CAtDID,SAAS;AAAAwB,EAAA,GAATxB,SAAS;AAwDf,eAAeA,SAAS;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}