{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Shell}from'lucide-react';// Import the Shell icon\nimport BoxLoader from\"./BoxLoader\";// Function to generate a random color from a predefined list\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const getRandomColor=()=>{const colors=[\"#333333\",\"#000080\",\"#228B22\",\"#800020\",\"#36220B\",\"#008080\",\"#4169E1\",\"#9400D3\",\"#2F4F4F\",\"#191970\",\"#556B2F\",\"#8B4513\",\"#5C4033\",\"#006064\",\"#8E4585\",\"#8B008B\",\"#4B0082\",\"#E2725B\",\"#264653\",\"#000000\",\"#000000\",\"#003153\",\"#5C4033\",\"#006400\",\"#2B3539\",\"#36454F\",\"#46535E\",\"#35393C\",\"#2F4F4F\",\"#9966CC\",\"#0F52BA\",\"#50C878\",\"#00A36C\",\"#E0115F\",\"#CC5500\",\"#E34234\",\"#954535\",\"#B7410E\",\"#E9967A\",\"#003153\",\"#008080\",\"#6A5ACD\",\"#228B22\",\"#355E3B\",\"#800020\",\"#8B0000\",\"#6F4E37\",\"#36454F\",\"#556B2F\"];return colors[Math.floor(Math.random()*colors.length)];};// RandomColorLoader component displays a rotating icon with changing colors and loading text\nconst RandomColorLoader=()=>{// State to hold the current color of the icon\nconst[currentColor,setCurrentColor]=useState(getRandomColor());// State to manage the animated dots for \"Loading...\" text\nconst[dots,setDots]=useState('.');useEffect(()=>{// Set up an interval to change the icon's color every 1 second\nconst colorInterval=setInterval(()=>{setCurrentColor(getRandomColor());},500);// Change color every 1000 milliseconds (1 second)\n// Set up an interval to animate the \"Loading...\" dots every 0.5 seconds\nconst dotsInterval=setInterval(()=>{setDots(prevDots=>{// Cycle through '.', '..', '...'\nif(prevDots==='...'){return'.';}return prevDots+'.';});},500);// Update dots every 500 milliseconds (0.5 seconds)\n// Cleanup function: Clear intervals when the component unmounts\nreturn()=>{clearInterval(colorInterval);clearInterval(dotsInterval);};},[]);// Empty dependency array ensures this effect runs only once on mount\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col items-center justify-center p-8 text-white\",children:[/*#__PURE__*/_jsx(Shell,{className:\"animate-spin-slow w-12 h-12 mb-4\",style:{color:currentColor,transition:'color 0.5s ease'}}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-xl font-semibold\",children:[\"Loading\",dots]})]});};export default RandomColorLoader;","map":{"version":3,"names":["React","useState","useEffect","Shell","BoxLoader","jsx","_jsx","jsxs","_jsxs","getRandomColor","colors","Math","floor","random","length","RandomColorLoader","currentColor","setCurrentColor","dots","setDots","colorInterval","setInterval","dotsInterval","prevDots","clearInterval","className","children","style","color","transition"],"sources":["C:/Users/hp/OneDrive/Desktop/frontend/src/components/looader/RandomColorLoader.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Shell } from 'lucide-react'; // Import the Shell icon\r\nimport BoxLoader from \"./BoxLoader\";\r\n// Function to generate a random color from a predefined list\r\nconst getRandomColor = () => {\r\n  const colors = [\r\n  \"#333333\",\r\n  \"#000080\",\r\n  \"#228B22\",\r\n  \"#800020\",\r\n  \"#36220B\",\r\n  \"#008080\",\r\n  \"#4169E1\",\r\n  \"#9400D3\",\r\n  \"#2F4F4F\",\r\n  \"#191970\",\r\n  \"#556B2F\",\r\n  \"#8B4513\",\r\n  \"#5C4033\",\r\n  \"#006064\",\r\n  \"#8E4585\",\r\n  \"#8B008B\",\r\n  \"#4B0082\",\r\n  \"#E2725B\",\r\n  \"#264653\",\r\n  \"#000000\",\r\n  \"#000000\",\r\n  \"#003153\",\r\n  \"#5C4033\",\r\n  \"#006400\",\r\n  \"#2B3539\",\r\n  \"#36454F\",\r\n  \"#46535E\",\r\n  \"#35393C\",\r\n  \"#2F4F4F\",\r\n  \"#9966CC\",\r\n  \"#0F52BA\",\r\n  \"#50C878\",\r\n  \"#00A36C\",\r\n  \"#E0115F\",\r\n  \"#CC5500\",\r\n  \"#E34234\",\r\n  \"#954535\",\r\n  \"#B7410E\",\r\n  \"#E9967A\",\r\n  \"#003153\",\r\n  \"#008080\",\r\n  \"#6A5ACD\",\r\n  \"#228B22\",\r\n  \"#355E3B\",\r\n  \"#800020\",\r\n  \"#8B0000\",\r\n  \"#6F4E37\",\r\n  \"#36454F\",\r\n  \"#556B2F\"\r\n]\r\n  return colors[Math.floor(Math.random() * colors.length)];\r\n};\r\n\r\n// RandomColorLoader component displays a rotating icon with changing colors and loading text\r\nconst RandomColorLoader = () => {\r\n  // State to hold the current color of the icon\r\n  const [currentColor, setCurrentColor] = useState(getRandomColor());\r\n  // State to manage the animated dots for \"Loading...\" text\r\n  const [dots, setDots] = useState('.');\r\n\r\n  useEffect(() => {\r\n    // Set up an interval to change the icon's color every 1 second\r\n    const colorInterval = setInterval(() => {\r\n      setCurrentColor(getRandomColor());\r\n    }, 500); // Change color every 1000 milliseconds (1 second)\r\n\r\n    // Set up an interval to animate the \"Loading...\" dots every 0.5 seconds\r\n    const dotsInterval = setInterval(() => {\r\n      setDots(prevDots => {\r\n        // Cycle through '.', '..', '...'\r\n        if (prevDots === '...') {\r\n          return '.';\r\n        }\r\n        return prevDots + '.';\r\n      });\r\n    }, 500); // Update dots every 500 milliseconds (0.5 seconds)\r\n\r\n    // Cleanup function: Clear intervals when the component unmounts\r\n    return () => {\r\n      clearInterval(colorInterval);\r\n      clearInterval(dotsInterval);\r\n    };\r\n  }, []); // Empty dependency array ensures this effect runs only once on mount\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center p-8 text-white\">\r\n      {/* Shell icon from lucide-react */}\r\n      {/* 'animate-spin-slow' class for continuous rotation (defined in tailwind.config.js) */}\r\n      {/* 'style' prop applies the dynamic color and a smooth transition for color changes */}\r\n      <Shell\r\n        className=\"animate-spin-slow w-12 h-12 mb-4\"\r\n        style={{ color: currentColor, transition: 'color 0.5s ease' }}\r\n      />\r\n\r\n      {/* \"Loading...\" text with animated dots */}\r\n      <p className=\"text-xl font-semibold\">\r\n        Loading{dots}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RandomColorLoader;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,KAAK,KAAQ,cAAc,CAAE;AACtC,MAAO,CAAAC,SAAS,KAAM,aAAa,CACnC;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBACA,KAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAAAC,MAAM,CAAG,CACfiBAAiB,CAAGA,CAAA,GAAM,CAC9B;AACA,KAAM,CAACC,YAAY,CAAEC,eAAe,CAAC,CAAGhB,QAAQ,CAACQ,cAAc,CAAC,CAAC,CAAC,CAClE;AACA,KAAM,CAACS,IAAI,CAAEC,OAAO,CAAC,CAAGlB,QAAQ,CAAC,GAAG,CAAC,CAErCC,SAAS,CAAC,IAAM,CACd;AACA,KAAM,CAAAkB,aAAa,CAAGC,WAAW,CAAC,IAAM,CACtCJ,eAAe,CAACR,cAAc,CAAC,CAAC,CAAC,CACnC,CAAC,CAAE,GAAG,CAAC,CAAE;AAET;AACA,KAAM,CAAAa,YAAY,CAAGD,WAAW,CAAC,IAAM,CACrCF,OAAO,CAACI,QAAQ,EAAI,CAClB;AACA,GAAIA,QAAQ,GAAK,KAAK,CAAE,CACtB,MAAO,GAAG,CACZ,CACA,MAAO,CAAAA,QAAQ,CAAG,GAAG,CACvB,CAAC,CAAC,CACJ,CAAC,CAAE,GAAG,CAAC,CAAE;AAET;AACA,MAAO,IAAM,CACXC,aAAa,CAACJ,aAAa,CAAC,CAC5BI,aAAa,CAACF,YAAY,CAAC,CAC7B,CAAC,CACH,CAAC,CAAE,EAAE,CAAC,CAAE;AAER,mBACEd,KAAA,QAAKiB,SAAS,CAAC,0DAA0D,CAAAC,QAAA,eAIvEpB,IAAA,CAACH,KAAK,EACJsB,SAAS,CAAC,kCAAkC,CAC5CE,KAAK,CAAE,CAAEC,KAAK,CAAEZ,YAAY,CAAEa,UAAU,CAAE,iBAAkB,CAAE,CAC/D,CAAC,cAGFrB,KAAA,MAAGiB,SAAS,CAAC,uBAAuB,CAAAC,QAAA,EAAC,SAC5B,CAACR,IAAI,EACX,CAAC,EACD,CAAC,CAEV,CAAC,CAED,cAAe,CAAAH,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}